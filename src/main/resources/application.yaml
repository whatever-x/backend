spring:
  profiles:
    default: dev
    active: local-mem
  application:
    name: whatever-backend
  jpa:
    open-in-view: false
    properties:
      hibernate:
        show_sql: false
        use_sql_comments: true
        format_sql: true
        globally_quoted_identifiers: true
  cloud:
    openfeign:
      okhttp:
        enabled: true
oauth:
  kakao:
    base-url: ${OAUTH_BASE_URL}
    client-id: ${OAUTH_CLIENT_ID}
    client-secret: ${OAUTH_CLIENT_SECRET}
    redirect-url: ${OAUTH_REDIRECT_URL}
    app-id: ${OAUTH_APP_ID}
    admin-key: ${OAUTH_ADMIN_KEY}
  apple:
    base-url: ${APPLE_BASE_URL}
    team-id: ${APPLE_TEAM_ID}
    service-id: ${APPLE_SERVICE_ID}
    key-id: ${APPLE_KEY_ID}
    key-path: ${APPLE_KEY_PATH}
    redirect-url: ${APPLE_REDIRECT_URI}
springdoc:
  default-produces-media-type: application/json
  default-consumes-media-type: application/json
  swagger-ui:
    path: /swagger
    disable-swagger-default-url: true
    display-request-duration: true
jwt:
  secret-key-str: ${SECRET_KEY_STR}
  access-expiration-sec: ${ACCESS_EXPIRATION_SEC}
  refresh-expiration-sec: ${REFRESH_EXPIRATION_SEC}
  issuer: Caramel
---
# Production
spring:
  config:
    activate:
      on-profile: production
#  datasource:
#    url: 'jdbc:h2:mem:whatever;NON_KEYWORDS=USER'
#    username: 'user'
#    password: ''
#    driver-class-name: org.h2.Driver
  jpa:
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        format_sql: true
        show_sql: true
---
# Dev
spring:
  config:
    activate:
      on-profile: dev
    import: optional:file:.env[.properties]
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DATABASE}
    username: ${POSTGRES_USERNAME}
    password: ${POSTGRES_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        format_sql: true
        show_sql: true
  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
      password: ${REDIS_PASSWORD}
  cache:
    type: redis

logback:
  path:
    root: ${LOG_FILE_ROOT_PATH}
---
# Local-mem
spring:
  config:
    activate:
      on-profile: local-mem
    import: optional:file:.env[.properties]
  datasource:
    driver-class-name: org.h2.Driver
    url: 'jdbc:h2:mem:whatever'
    username: 'user'
    password: ''
  jpa:
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        format_sql: true
        show_sql: true
  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
      password: ${REDIS_PASSWORD}
  cache:  # 원하는 cache의 주석을 해제하여 사용
    type: caffeine
#    type: redis

logback:
    path:
      root: ${LOG_FILE_ROOT_PATH}
