name: Caramel CI

on:
  workflow_dispatch:
  pull_request:
    types: [ opened, ready_for_review, synchronize ]

concurrency:
  group: test-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-24.04
    permissions:
      contents: read
      pull-requests: write
    env:
      SPRING_SERVER_PORT: ${{ secrets.SPRING_SERVER_PORT }}
      SPRING_PROFILES_ACTIVE: ${{ secrets.SPRING_PROFILES_ACTIVE }}
      SECRET_KEY_STR: ${{ secrets.SECRET_KEY_STR }}
      ACCESS_EXPIRATION_SEC: ${{ secrets.ACCESS_EXPIRATION_SEC }}
      REFRESH_EXPIRATION_SEC: ${{ secrets.REFRESH_EXPIRATION_SEC }}
      OAUTH_BASE_URL: ${{ secrets.OAUTH_BASE_URL }}
      OAUTH_CLIENT_ID: ${{ secrets.OAUTH_CLIENT_ID }}
      OAUTH_CLIENT_SECRET: ${{ secrets.OAUTH_CLIENT_SECRET }}
      OAUTH_REDIRECT_URL: ${{ secrets.OAUTH_REDIRECT_URL }}
      OAUTH_APP_ID: ${{ secrets.OAUTH_APP_ID }}
      OAUTH_ADMIN_KEY: ${{ secrets.OAUTH_ADMIN_KEY }}
      APPLE_BASE_URL: ${{ secrets.APPLE_BASE_URL }}
      APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
      APPLE_SERVICE_ID: ${{ secrets.APPLE_SERVICE_ID }}
      APPLE_KEY_ID: ${{ secrets.APPLE_KEY_ID }}
      APPLE_KEY_PATH: ${{ secrets.APPLE_KEY_PATH }}
      APPLE_REDIRECT_URI: ${{ secrets.APPLE_REDIRECT_URI }}
      SWAGGER_USER: ${{ secrets.SWAGGER_USER }}
      SWAGGER_PASSWORD: ${{ secrets.SWAGGER_PASSWORD }}
      DEV_SERVER_URL: ${{ secrets.DEV_SERVER_URL }}
      LOCAL_SERVER_URL: ${{ secrets.LOCAL_SERVER_URL }}
      ACTUATOR_BASE_PATH: ${{ secrets.ACTUATOR_BASE_PATH }}
      ACTUATOR_BASE_PORT: ${{ secrets.ACTUATOR_BASE_PORT }}
      ACTUATOR_APPLICATION_NAME: ${{ secrets.ACTUATOR_APPLICATION_NAME }}
      ACTUATOR_EXPOSURE_API: ${{ secrets.ACTUATOR_EXPOSURE_API }}
      OPENAPI_SPECIALDAY_KEY: ${{ secrets.OPENAPI_SPECIALDAY_KEY }}
      GOOGLE_APPLICATION_CREDENTIALS: ./firebase-test-sdk.json
      FCM_ENABLED: ${{ secrets.FCM_ENABLED }}
      DB_MAX_CONNECTION: ${{ secrets.DB_MAX_CONNECTION }}
      CRYPTO_PASSWORD: ${{ secrets.CRYPTO_PASSWORD }}
      CRYPTO_SALT: ${{ secrets.CRYPTO_SALT }}
    services:
      redis:
        image: redis
        ports:
          - '6379:6379'

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      # Configure Gradle for optimal use in GitHub Actions, including caching of downloaded dependencies.
      # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: create-json
        # You may pin to the exact commit or the version.
        # uses: jsdaniell/create-json@b8e77fa01397ca39cc4a6198cc29a3be5481afef
        uses: jsdaniell/create-json@v1.2.3
        with:
          # The name of the file to be written. | file.json
          name: firebase-test-sdk.json
          # The json string that can be a secret of the github repo or a string of a json. | "{"title": "my json"}"
          json: ${{ secrets.FIREBASE_ADMIN_SDK }}
          # Optional subfolder directory to save the json file. | src/
          dir: ./

      - name: Gradle Test
        run: ./gradlew --info test
        env:
          REDIS_HOST: localhost
          REDIS_PORT: 6379

      # NOTE: The Gradle Wrapper is the default and recommended way to run Gradle (https://docs.gradle.org/current/userguide/gradle_wrapper.html).
      # If your project does not have the Gradle Wrapper configured, you can use the following configuration to run Gradle with a specified version.
      #
      # - name: Setup Gradle
      #   uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0
      #   with:
      #     gradle-version: '8.9'
      #
      # - name: Build with Gradle 8.9
      #   run: gradle build

      - name: Jacoco Report
        uses: Madrapps/jacoco-report@v1.7.2
        with:
          # Comma separated paths of the generated jacoco xml files (supports wildcard glob pattern)
          paths: ${{ github.workspace }}/testReport/jacocoXml/test/jacocoTestRepost.xml
          # Github personal token to add comments to Pull Request
          token: ${{ secrets.GITHUB_TOKEN }}
          # The minimum code coverage that is required to pass for overall project
          # min-coverage-overall: 40 # optional, default is 80
          # The minimum code coverage that is required to pass for changed files
          # min-coverage-changed-files: 40 # optional, default is 80
          # Optional title for the Pull Request comment
          title: Caramel Code Coverage # optional
          # Update the coverage report comment instead of creating new ones. Requires title to works properly.
          update-comment: true # optional, default is false

            # Specifies where to add the comment, whether as a PR comment, workflow summary, or both.
            # comment-type: # optional, default is pr_comment
            # The PR number to add the comment to. If not provided, the action will try to get it from the environment.
            # pr-number: # optional
            # Comment won't be added if there is no coverage information present for the files changed
            # skip-if-no-changes: # optional, default is false
            # Github emoji to use for pass status shown when coverage greater than min coverage (should be a Github supported emoji)
            # pass-emoji: # optional, default is :green_apple:
            # Github emoji to use for fail status shown when coverage lesser than min coverage (should be a Github supported emoji)
            # fail-emoji: # optional, default is :x:
            # When there is an error do not fail the action, but log a warning
            # continue-on-error: # optional, default is true
          # Run the action in debug mode and get debug logs printed in console
          # debug-mode: # optional, default is false


      - name: Upload Jacoco HTML report
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-html-report
          path: ${{ github.workspace }}/testReport/jacocoReport/test/html
